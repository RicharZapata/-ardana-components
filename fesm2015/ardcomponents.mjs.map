{"version":3,"file":"ardcomponents.mjs","sources":["../../../projects/ardcomponents/src/lib/input-form/input-form.component.ts","../../../projects/ardcomponents/src/lib/input-form/input-form.component.html","../../../projects/ardcomponents/src/lib/card-form/card-form.component.ts","../../../projects/ardcomponents/src/lib/card-form/card-form.component.html","../../../projects/ardcomponents/src/lib/ardcomponents.service.ts","../../../projects/ardcomponents/src/lib/ardcomponents.component.ts","../../../projects/ardcomponents/src/lib/ardcomponents.module.ts","../../../projects/ardcomponents/src/public-api.ts","../../../projects/ardcomponents/src/ardcomponents.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\n\ninterface styleInput {\n  width?:string,\n  center?: boolean\n}\n\n@Component({\n  selector: 'ard-input-form',\n  templateUrl: './input-form.component.html',\n})\nexport class InputFormComponent implements ControlValueAccessor, Validator, AfterViewInit {\n\n  @ViewChild('input') inputElement: ElementRef | undefined;\n  @ViewChild('inputComponent') inputComponent: ElementRef | undefined;\n\n  @Input() id?:string;\n  @Input() name?: string;\n  @Input() min?: string;\n  @Input() max?: string;\n  @Input() minLength?: string;\n  @Input() maxLength?: string;\n  @Input() value?: any;\n  @Input() disabled: boolean = false;\n  @Input() placeholder?:string;\n  @Input() type?:string = 'text';\n  @Input() control: AbstractControl = new FormControl();\n  @Input() pattern: string = '';\n  @Input() mask: string = '';\n\n  @Input() label: string | null = null;\n  @Input() description?: string;\n  @Input() style?: styleInput = {\n    width: '300px',\n    center: false\n  };\n\n  constructor() {\n  }\n\n  ngAfterViewInit() {\n    if(this.control.value !== ''){\n      this.inputComponent?.nativeElement.classList.add('filled');\n    }\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    throw new Error('Method not implemented.');\n  }\n  writeValue(obj: any): void {\n    throw new Error('Method not implemented.');\n  }\n  registerOnChange(fn: any): void {\n    throw new Error('Method not implemented.');\n  }\n  registerOnTouched(fn: any): void {\n    throw new Error('Method not implemented.');\n  }\n\n  setFocus() {\n    if(this.label !== null) {\n      this.inputElement?.nativeElement.focus();\n      this.inputComponent?.nativeElement.classList.add('focus');\n      this.inputElement?.nativeElement.addEventListener('focusout', (event: any) => {\n        if(event.target.value == '') this.inputComponent?.nativeElement.classList.remove('focus');\n      });\n    }\n  }\n}\n","<div #inputComponent class=\"input-container\" [style.width]=\"style?.width\" [class.hideholder]=\"label\" [class.marginTop]=\"label\">\n  <label (click)=\"setFocus()\" *ngIf=\"label\">{{label}}</label>\n  <input #input\n    (click)=\"setFocus()\"\n    (focusin)=\"setFocus()\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n    [ngStyle]=\"{'text-align': style?.center ? 'center':'left'}\"\n    [value]=\"value\"\n    [id]=\"id\"\n    [formControl]=\"$any(control)\"\n    [disabled]=\"disabled\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [pattern]=\"pattern\"\n    [mask]=\"mask\"\n  />\n  <small>{{description}}</small>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ninterface masksCard {\n  card: string;\n  cvv: string\n}\n@Component({\n  selector: 'ard-card-form',\n  templateUrl: './card-form.component.html',\n  styleUrls: ['./card-form.component.css']\n})\nexport class CardFormComponent {\n\n  @Output() SubmitEvent: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  text: string = '';\n  form = new FormGroup({\n    cardNumber: new FormControl(\"\",[Validators.required]),\n    cardholderName: new FormControl(\"\",[Validators.required]),\n    cardExpirationMonth: new FormControl(\"\",[Validators.required, Validators.max(2)]),\n    cardExpirationYear: new FormControl(\"\",[Validators.required]),\n    securityCode: new FormControl(\"\",[Validators.required])\n  });\n  masks: masksCard = {\n    card: '0000 0000 0000 0000',\n    cvv: '000'\n  };\n\n  constructor(\n  ) {\n    this.form.valueChanges.subscribe(resp => {\n      console.log(resp);\n      resp.get('cardholderName').set(resp.get('cardholderName').toUppercase());\n    });\n   }\n\n  submit() {\n    console.log(this.form.value);\n  }\n\n}\n","<div class=\"card-form\">\n  <form [formGroup]=\"form\">\n    <ard-input-form type=\"text\" placeholder=\"JUAN PEREZ GONZALEZ\" description=\"Escribe el nombre como aparece en la tarjeta\" label=\"Nombre del titular\" pattern=\"[A-Z]*\" [style]=\"{width:'340px'}\" [control]=\"$any(form).get('cardholderName')\"></ard-input-form>\n    <ard-input-form type=\"text\" placeholder=\"2222 2222 2222 2222\" description=\"Numero a 16 digitos\" label=\"Numero de tarjeta\" [style]=\"{width:'340px'}\" [control]=\"$any(form).get('cardNumber')\" pattern=\"[0-9]*\" [mask]=\"masks.card\"></ard-input-form>\n    <label class=\"expiration-label\">Fecha Expiraci√≥n</label>\n    <div class=\"expiration-card-form\">\n      <ard-input-form type=\"text\" placeholder=\"MM\" [style]=\"{'width':'50px', 'center':true}\" [control]=\"$any(form).get('cardExpirationMonth')\" pattern=\"[0-9]*\" [mask]=\"'00'\"></ard-input-form>\n      <ard-input-form type=\"text\" placeholder=\"YY\" [style]=\"{'width':'50px', 'center': true}\" [control]=\"$any(form).get('cardExpirationYear')\" pattern=\"[0-9]*\" [mask]=\"'00'\"></ard-input-form>\n    </div>\n    <ard-input-form type=\"text\" placeholder=\"CVV\" description=\"3 digitos\" label=\"CVV\" [style]=\"{width:'80px'}\" [control]=\"$any(form).get('securityCode')\" pattern=\"[0-9]*\" [mask]=\"masks.cvv\"></ard-input-form>\n    <button class=\"save-button\" (click)=\"submit()\">Guardar</button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ARDComponentsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ARDComponents',\n  template: `\n    <p>\n      ardcomponents works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ARDComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CardFormComponent } from './card-form/card-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputFormComponent } from './input-form/input-form.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\nimport { ARDComponentsComponent } from './ardcomponents.component';\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n\n@NgModule({\n  declarations: [\n    ARDComponentsComponent,\n    CardFormComponent,\n    InputFormComponent\n  ],\n  imports: [\n    NgxMaskModule.forRoot(maskConfig),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    ARDComponentsComponent,\n    InputFormComponent,\n    CardFormComponent\n  ]\n})\nexport class ARDComponentsModule { }\n","/*\n * Public API Surface of ardcomponents\n */\nexport * from './lib/card-form/card-form.component';\nexport * from './lib/input-form/input-form.component';\nexport * from './lib/ardcomponents.service';\nexport * from './lib/ardcomponents.component';\nexport * from './lib/ardcomponents.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.InputFormComponent"],"mappings":"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"}